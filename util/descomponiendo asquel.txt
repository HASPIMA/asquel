# -*- coding: utf-8 -*-						| Establecemos la codificación a UTF-8 para que reconozca eñes y acentos.
import parser							| Importamos el módulo de analisis de expresiones nativo de Python.
from math import *						| Del módulo math importamos absolutamente todo incluyendo clases y funciones

print 'Asquel versión 0.0.0.0c'					| Asquel versión 0.0.0.0c
print 'Copyright 2017 Alan Ramirez Zatarain'			| Copyright 2017 Alan Ramirez Zatarain
print 'Liberado al público bajo la BSD 3-Clause License'	| Liberado al público bajo la BSD 3-Clause License
print 'Para aprender sobre la sintaxys de asquel ingresa a:'	| Para aprender sobre la sintaxys de asquel ingresa a:
print 'http://asquel.hol.es/'					| http://asquel.hol.es/
print ' '							| Salto de línea falso


def main():							| Definimos todo lo de abajo como main()
    while True:							| Ciclo que se repite cada ves que se termina de mostrar el resultado
        try:							| Preparamos
            entrada = raw_input('asquelito$ ')			| Aceptar entrada de expresión
        except EOFError:					| Captamos excepción
            break						| Punto de ruptura
        if not entrada:						| En caso de que la entrada esté vacía (que no hayan tecleado nada)
            continue						| Es un error, pero no afecta a la ejecución y lo pasamos por alto

	medio = parser.expr(entrada).compile()			| El analizador intepretará la expresión y la convertirá a una denotación que Python puede interpretar
	resultado = eval(medio)					| Una vez denotada, la expresión deve ser resuelta.
	print '%s\n' % resultado				| Muestra en salida el resultado ya evaluado y un salto de línea.

if __name__ == '__main__':					| Finalizó la ejecución, ahora que?
    main()							| Ejecuta main()
