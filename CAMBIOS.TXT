Cambios con respecto a la versión anterior:

1.- El entorno de ejecución es por ahora Python 2.x, ya que Asquel no es compatible con Python 3.x (ver el bug A:0001).
2.- Cambios menores en los nombres de algunas variables para que describan a que se refieren y para que sirven sin confundir al programador.
3.- El resultado ya no es tomado como el formato de la expresión evaluada, se ha creado una función que permite hacer esto.
4.- El modulo Xoloitzcuintle ha sido renombrado a xolo, para acortar.
5.- Uso del modulo built-in opereator.
6.- Creada la clase Analizador que incluye las funciones:
    __init__() Crea el puntero y carga el texto.
    analizar() Identifica simbolos y construye la expresión.
    compilarExpresion() Procesa el texto para construir la expresión.
    Simbolizar() Convierte la expresión en simbolos con el formato numero -> operando -> numero.
    cargarSiguienteSimbolo() Dado que la expresión ha sido convertida en simbolos dentro de un array, esta función los carga de uno por uno como se le va solicitando.
    esOperador() Revisa si el caracter actual es un operador.
    cargarSiguienteCaracter() Cada simbolo puede estar constituido de más de un caracter, esta funcion los carag por separado.
    veridicar() Revisar si en un simbolo válido
7.- Creada la clase Interprete con las funciones:
    __init__() Carga como entrada lo que la clase Analizador arroje.
    interpretar() Función principal, regresa la expresión resuelta con la ayuda de la función simplificarExpresion().resolver().